- name: sorm_logs_backup settings directory
  file:
    path: "{{ project_dir }}/etc/sorm_logs_backup"
    state: directory

- name: sorm_logs_backup settings file
  template:
    src: sorm_logs_backup_config.yml
    dest: "{{ project_dir }}/etc/sorm_logs_backup/config.yml"
    mode: 0644
  tags: update

- name: backups directory
  file:
    path: "{{ project_dir }}/var/backups"
    state: directory

- name: Log into DockerHub
  docker_login:
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
  tags: update

- name: Create sorm_logs_backup docker container
  when: dev is not defined
  docker_container:
    name: "{{ sorm_logs_backup_docker_container_name }}"
    image: "{{ docker_registry_username }}/{{ sorm_logs_backup_docker_image }}"
    pull: yes
    state: present
    restart_policy: "on-failure"
    recreate: yes
    ports:
      - "{{ sorm_logs_backup_expose_port }}:{{ sorm_logs_backup_port }}"
    networks_cli_compatible: yes
    networks:
      - name: sorm_logs_network
    volumes:
      - "{{ project_dir }}/var/clickhouse:{{ clickhouse_data_path }}"
      - "{{ project_dir }}/var/backups:/backups"
      - "{{ project_dir }}/etc/sorm_logs_backup/config.yml/:{{ sorm_logs_backup_config_path }}"
    env:
      SORM_LOGS_BACKUP_CONFIG: '{{ sorm_logs_backup_config_path }}'
  tags: update

- include: sorm_logs_backup_build_docker_image.yml tag=dev
  when: dev is defined

- name: Run sorm_logs_backup docker container with mounted src code
  when: dev is defined
  docker_container:
    name: "{{ sorm_logs_backup_docker_container_name }}"
    image: "{{ sorm_logs_backup_docker_image }}:dev"
    state: started
    restart_policy: 'no'
    recreate: yes
    ports:
      - "{{ sorm_logs_backup_expose_port }}:{{ sorm_logs_backup_port }}"
    networks_cli_compatible: yes
    networks:
      - name: sorm_logs_network
    volumes:
      - "{{ project_dir }}/var/clickhouse:{{ clickhouse_data_path }}"
      - "{{ project_dir }}/var/backups:/backups"
      - "{{ project_dir }}/etc/sorm_logs_backup/config.yml/:{{ sorm_logs_backup_config_path }}"
      - "{{ sorm_logs_backup_source_code_path }}:/code"
    env:
      SORM_LOGS_BACKUP_CONFIG: '{{ sorm_logs_backup_config_path }}'



- name: Wait until clickhouse is started
  wait_for:
    port: "{{ clickhouse_expose_port }}"
    timeout: 30
  tags: [start, update]

- name: Run sorm_logs_backup docker container
  docker_container:
    pull: no
    name: "{{ sorm_logs_backup_docker_container_name }}"
    state: started
  tags: [update, start]
